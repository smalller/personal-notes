apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '3'
  generation: 4
  labels:
    app: feduopend
  name: feduopend
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: feduopend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: feduopend
    spec:
      imagePullSecrets:
        - name: secret-key
      tolerations:
        - key: 'project'
          operator: 'Equal'
          value: 'jinshuya'
          effect: 'NoSchedule'
      containers:
        - env:
          image: ${IMAGE}
          imagePullPolicy: Always
          name: feduopend
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              name: https
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/localtime
              name: volume-localtime
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - hostPath:
            path: /etc/localtime
            type: ''
          name: volume-localtime

---
apiVersion: v1
kind: Service
metadata:
  name: feduopend-svc
spec:
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: feduopend
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/service-weight: ''
  generation: 2
  name: feduopend-ing
spec:
  rules:
    - host: opend.yjb.jinshuy.com
      http:
        paths:
          - backend:
              serviceName: feduopend-svc
              servicePort: 80
            path: /