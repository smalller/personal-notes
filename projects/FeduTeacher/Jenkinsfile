podTemplate(yaml: """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: some-label-value
spec:
  containers:
  - name: kubectl
    image: 172.16.0.107:2180/base/kubectl:latest
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    env:
    - name: CONTAINER_ENV_VAR
      value: kubectl
  - name: node
    image: 172.16.0.107:2180/base/node:12
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    env:
    - name: CONTAINER_ENV_VAR
      value: node
    volumeMounts:
    - name: repo-npm-cache
      mountPath: /root/npm
  - name: docker
    image: 172.16.0.107:2180/base/docker:latest
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    env:
    - name: CONTAINER_ENV_VAR
      value: docker
    volumeMounts:
    - name: repo-docker-sock
      mountPath: /var/run/docker.sock
  volumes:
  - name: repo-npm-cache
    persistentVolumeClaim:
      claimName: devnpm
  - name: repo-docker-sock
    hostPath:
      path: /var/run/docker.sock
"""
) {
    def RUN_ENV = 'yjbdev'
    def PROJECT_NAME = env.BRANCH_NAME
    def PROJECT_SVC = PROJECT_NAME
    def PROJECT_SVC_NP = PROJECT_NAME + '-np'

    def PROJECT_CONTEXT = 'yjbteacher'
    def PROJECT_GIT = 'https://codeup.aliyun.com/5edde0a5d1d1abe63b55f4fa/FeduYJB/front-end/FeduTeacher.git'
    def PROJECT_BRANCH = 'develop'
    def PROJECT_PORT = 80
    def PROJECT_PORT_EXT = 30198
    def PROJECT_ING = PROJECT_NAME + '-ing'

    def BUILD_USER, DOCKER_IMAGE

    node(POD_LABEL) {
        properties(
            [
                pipelineTriggers([cron('TZ=Asia/Shanghai\nH 3 * * *')]),
            ]
        )
        stage('Run shell') {
            wrap([$class: 'BuildUser']) {
                BUILD_USER = "${BUILD_USER}"
                DOCKER_IMAGE = "172.16.0.107:2180/zdyjb/" + env.BRANCH_NAME + ':' + env.BUILD_ID
            }
            sh "echo ${DOCKER_IMAGE}"
        }


        stage('Get Npm project') {
            git  branch: 'develop', credentialsId: 'test-jenkins', url: PROJECT_GIT
            container('node') {
                stage('Build a Maven project') {
                    sh 'npm config ls'
                    sh 'npm config set registry https://registry.npm.taobao.org'
                    sh 'npm install'
                    sh 'cat package.json'
                    sh 'npm run devBuild'
                    sh 'ls ./dist'
                }
            }
        }

        stage('Build image') {
            container('docker') {
                stage('Build a Maven project') {
                    echo "构建Docker镜像"
                    withCredentials([usernamePassword(credentialsId: 'harbor', passwordVariable: 'password', usernameVariable: 'username')]) {
                        sh 'docker login -u $username -p $password 172.16.0.107:2180'
                        sh "docker build -f dockerfile-dev -t ${DOCKER_IMAGE} ."
                        sh "docker push ${DOCKER_IMAGE}"
                    }
                }
            }
        }

        stage('deploy') {
            container('kubectl') {
                stage('deploy to kubernetes') {
                    echo "构建Docker镜像"
                    kubeconfig(credentialsId: 'zk8s', serverUrl: 'https://172.16.0.105:6443') {
                        sh 'kubectl get pods -n jenkins'
                        sh "sed -i s@IMAGE@${DOCKER_IMAGE}@g ./manifests/manifests-dev.yaml"
                        sh """
cat manifests/manifests-dev.yaml
                        """
                        sh 'kubectl -n yjbdev apply -f manifests/manifests-dev.yaml'
                    }
                }
            }
        }
    }
}